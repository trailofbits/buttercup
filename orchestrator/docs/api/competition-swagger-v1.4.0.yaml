definitions:
  types.Architecture:
    enum:
      - x86_64
      - aarch64
    type: string
    x-enum-varnames:
      - ArchitectureX8664
      - ArchitectureAArch64
  types.Assessment:
    enum:
      - correct
      - incorrect
    type: string
    x-enum-varnames:
      - AssessmentCorrect
      - AssessmentIncorrect
  types.BundleSubmission:
    properties:
      broadcast_sarif_id:
        format: uuid
        type: string
      description:
        description:
          optional plaintext description of the components of the bundle,
          such as would be found in a pull request description or bug report
        type: string
      freeform_id:
        format: uuid
        type: string
      patch_id:
        format: uuid
        type: string
      pov_id:
        format: uuid
        type: string
      submitted_sarif_id:
        format: uuid
        type: string
    type: object
  types.BundleSubmissionResponse:
    properties:
      bundle_id:
        format: uuid
        type: string
      status:
        allOf:
          - $ref: "#/definitions/types.SubmissionStatus"
        description:
          Schema-compliant submissions will only ever receive the statuses
          accepted or deadline_exceeded
    required:
      - bundle_id
      - status
    type: object
  types.BundleSubmissionResponseVerbose:
    properties:
      broadcast_sarif_id:
        format: uuid
        type: string
      bundle_id:
        format: uuid
        type: string
      description:
        type: string
      freeform_id:
        format: uuid
        type: string
      patch_id:
        format: uuid
        type: string
      pov_id:
        format: uuid
        type: string
      status:
        allOf:
          - $ref: "#/definitions/types.SubmissionStatus"
        description:
          Schema-compliant submissions will only ever receive the statuses
          accepted or deadline_exceeded
      submitted_sarif_id:
        format: uuid
        type: string
    required:
      - bundle_id
      - status
    type: object
  types.Error:
    properties:
      fields:
        additionalProperties:
          type: string
        type: object
      message:
        type: string
    required:
      - message
    type: object
  types.FreeformResponse:
    properties:
      freeform_id:
        format: uuid
        type: string
      status:
        allOf:
          - $ref: "#/definitions/types.SubmissionStatus"
        description:
          Schema-compliant submissions will only ever receive the statuses
          accepted or deadline_exceeded
    required:
      - freeform_id
      - status
    type: object
  types.FreeformSubmission:
    properties:
      submission:
        description: |-
          Base64 encoded arbitrary data

          2MiB max size before Base64 encoding
        type: string
    required:
      - submission
    type: object
  types.FuzzingEngine:
    enum:
      - libfuzzer
    type: string
    x-enum-varnames:
      - FuzzingEngineLibFuzzer
  types.Message:
    properties:
      message:
        type: string
    type: object
  types.POVSubmission:
    properties:
      architecture:
        $ref: "#/definitions/types.Architecture"
      engine:
        $ref: "#/definitions/types.FuzzingEngine"
      fuzzer_name:
        description: |-
          Fuzz Tooling fuzzer that exercises this vuln

          4KiB max size
        maxLength: 4096
        type: string
      sanitizer:
        description: |-
          Fuzz Tooling Sanitizer that exercises this vuln

          4KiB max size
        maxLength: 4096
        type: string
      testcase:
        description: |-
          Base64 encoded vuln trigger

          2MiB max size before Base64 encoding
        format: base64
        type: string
    required:
      - architecture
      - engine
      - fuzzer_name
      - sanitizer
      - testcase
    type: object
  types.POVSubmissionResponse:
    properties:
      pov_id:
        format: uuid
        type: string
      status:
        $ref: "#/definitions/types.SubmissionStatus"
    required:
      - pov_id
      - status
    type: object
  types.PatchSubmission:
    properties:
      patch:
        description: |-
          Base64 encoded patch in unified diff format

          100KiB max size before Base64 encoding
        format: base64
        type: string
    required:
      - patch
    type: object
  types.PatchSubmissionResponse:
    properties:
      functionality_tests_passing:
        description: null indicates the tests have not been run
        type: boolean
      patch_id:
        format: uuid
        type: string
      status:
        $ref: "#/definitions/types.SubmissionStatus"
    required:
      - patch_id
      - status
    type: object
  types.PingResponse:
    properties:
      status:
        type: string
    required:
      - status
    type: object
  types.RequestListResponse:
    properties:
      challenges:
        description: List of challenges that competitors may task themselves with
        items:
          type: string
        type: array
    required:
      - challenges
    type: object
  types.RequestSubmission:
    properties:
      duration_secs:
        description:
          Time in seconds until a task should expire. If not provided,
          defaults to 3600.
        type: integer
    type: object
  types.SARIFSubmission:
    properties:
      sarif:
        description: SARIF object compliant with the provided schema
        type: object
    required:
      - sarif
    type: object
  types.SARIFSubmissionResponse:
    properties:
      status:
        allOf:
          - $ref: "#/definitions/types.SubmissionStatus"
        description:
          Schema-compliant submissions will only ever receive the statuses
          accepted or deadline_exceeded
      submitted_sarif_id:
        format: uuid
        type: string
    required:
      - status
      - submitted_sarif_id
    type: object
  types.SarifAssessmentResponse:
    properties:
      status:
        $ref: "#/definitions/types.SubmissionStatus"
    required:
      - status
    type: object
  types.SarifAssessmentSubmission:
    properties:
      assessment:
        $ref: "#/definitions/types.Assessment"
      description:
        description: |-
          Plain text reasoning for the assessment.

          Must be nonempty.

          128KiB max size
        maxLength: 131072
        type: string
    required:
      - assessment
      - description
    type: object
  types.SubmissionStatus:
    enum:
      - accepted
      - passed
      - failed
      - deadline_exceeded
      - errored
      - inconclusive
    type: string
    x-enum-comments:
      SubmissionStatusAccepted: Successfully submitted
      SubmissionStatusDeadlineExceeded:
        Task deadline exceeded. All submissions marked
        accepted before the deadline will be evaluated.
      SubmissionStatusErrored: Server side error when testing submission
      SubmissionStatusFailed: Submission failed testing
      SubmissionStatusInconclusive:
        Test continued running beyond timeout and will
        be manually reviewed after the round.  As a result this status is inconclusive.
      SubmissionStatusPassed: Successfully evaluated submission
    x-enum-varnames:
      - SubmissionStatusAccepted
      - SubmissionStatusPassed
      - SubmissionStatusFailed
      - SubmissionStatusDeadlineExceeded
      - SubmissionStatusErrored
      - SubmissionStatusInconclusive
info:
  contact: {}
  title: Example Competition API
  version: 1.4.0
paths:
  /v1/ping/:
    get:
      consumes:
        - application/json
      description: Test authentication creds and network connectivity
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/types.PingResponse"
      security:
        - BasicAuth: []
      summary: Test authentication creds and network connectivity
      tags:
        - ping
  /v1/request/{challenge_name}:
    post:
      consumes:
        - application/json
      description: Send a task to the source of this request
      parameters:
        - description: Challenge Name
          in: path
          name: challenge_name
          required: true
          type: string
        - description: Submission Body
          in: body
          name: payload
          required: true
          schema:
            $ref: "#/definitions/types.RequestSubmission"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/types.Message"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/types.Error"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/types.Error"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/types.Error"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/types.Error"
      security:
        - BasicAuth: []
      summary: Send a task to the source of this request
      tags:
        - request
  /v1/request/list/:
    get:
      consumes:
        - application/json
      description: Get a list of available challenges to task
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/types.RequestListResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/types.Error"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/types.Error"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/types.Error"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/types.Error"
      security:
        - BasicAuth: []
      summary: Get a list of available challenges to task
      tags:
        - request
  /v1/task/{task_id}/broadcast-sarif-assessment/{broadcast_sarif_id}/:
    post:
      consumes:
        - application/json
      description: Submit a SARIF assessment
      parameters:
        - description: Task ID
          format: uuid
          in: path
          name: task_id
          required: true
          type: string
        - description: Broadcast SARIF ID
          format: uuid
          in: path
          name: broadcast_sarif_id
          required: true
          type: string
        - description: Submission body
          in: body
          name: payload
          required: true
          schema:
            $ref: "#/definitions/types.SarifAssessmentSubmission"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/types.SarifAssessmentResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/types.Error"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/types.Error"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/types.Error"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/types.Error"
      security:
        - BasicAuth: []
      summary: Submit a SARIF Assessment
      tags:
        - broadcast-sarif-assessment
  /v1/task/{task_id}/bundle/:
    post:
      consumes:
        - application/json
      description: submits a bundle
      parameters:
        - description: Task ID
          format: uuid
          in: path
          name: task_id
          required: true
          type: string
        - description: Submission Body
          in: body
          name: payload
          required: true
          schema:
            $ref: "#/definitions/types.BundleSubmission"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/types.BundleSubmissionResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/types.Error"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/types.Error"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/types.Error"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/types.Error"
      security:
        - BasicAuth: []
      summary: Submit Bundle
      tags:
        - bundle
  /v1/task/{task_id}/bundle/{bundle_id}/:
    delete:
      consumes:
        - application/json
      description: delete a bundle
      parameters:
        - description: Task ID
          format: uuid
          in: path
          name: task_id
          required: true
          type: string
        - description: Bundle ID
          format: uuid
          in: path
          name: bundle_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/types.Error"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/types.Error"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/types.Error"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/types.Error"
      security:
        - BasicAuth: []
      summary: Delete Bundle
      tags:
        - bundle
    get:
      consumes:
        - application/json
      description: get a bundle
      parameters:
        - description: Task ID
          format: uuid
          in: path
          name: task_id
          required: true
          type: string
        - description: Bundle ID
          format: uuid
          in: path
          name: bundle_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/types.BundleSubmissionResponseVerbose"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/types.Error"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/types.Error"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/types.Error"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/types.Error"
      security:
        - BasicAuth: []
      summary: Get Bundle
      tags:
        - bundle
    patch:
      consumes:
        - application/json
      description: updates a bundle
      parameters:
        - description: Task ID
          format: uuid
          in: path
          name: task_id
          required: true
          type: string
        - description: Bundle ID
          format: uuid
          in: path
          name: bundle_id
          required: true
          type: string
        - description: Submission Body
          in: body
          name: payload
          required: true
          schema:
            $ref: "#/definitions/types.BundleSubmission"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/types.BundleSubmissionResponseVerbose"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/types.Error"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/types.Error"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/types.Error"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/types.Error"
      security:
        - BasicAuth: []
      summary: Update Bundle
      tags:
        - bundle
  /v1/task/{task_id}/freeform/:
    post:
      consumes:
        - application/json
      description:
        CRSs may submit anything to this endpoint as a base64'd string.  This
        is the only way to submit PoVs and Patches for unharnessed challenges, but
        will be open for other challenges also.   Nothing submitted to this endpoint
        is evaluated automatically.  Bundles can only contain one freeform_id, so
        pack as much info into the Freeform as you need.
      parameters:
        - description: Task ID
          format: uuid
          in: path
          name: task_id
          required: true
          type: string
        - description: Submission Body
          in: body
          name: payload
          required: true
          schema:
            $ref: "#/definitions/types.FreeformSubmission"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/types.FreeformResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/types.Error"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/types.Error"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/types.Error"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/types.Error"
      security:
        - BasicAuth: []
      summary: Submit Freeform
      tags:
        - freeform
  /v1/task/{task_id}/patch/:
    post:
      consumes:
        - application/json
      description: submit a patch for testing
      parameters:
        - description: Task ID
          format: uuid
          in: path
          name: task_id
          required: true
          type: string
        - description: Payload
          in: body
          name: payload
          required: true
          schema:
            $ref: "#/definitions/types.PatchSubmission"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/types.PatchSubmissionResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/types.Error"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/types.Error"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/types.Error"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/types.Error"
      security:
        - BasicAuth: []
      summary: Submit Patch
      tags:
        - patch
  /v1/task/{task_id}/patch/{patch_id}/:
    get:
      consumes:
        - application/json
      description: yield the status of patch testing
      parameters:
        - description: Task ID
          format: uuid
          in: path
          name: task_id
          required: true
          type: string
        - description: Patch ID
          format: uuid
          in: path
          name: patch_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/types.PatchSubmissionResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/types.Error"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/types.Error"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/types.Error"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/types.Error"
      security:
        - BasicAuth: []
      summary: Patch Status
      tags:
        - patch
  /v1/task/{task_id}/pov/:
    post:
      consumes:
        - application/json
      description: submit a vulnerability for testing
      parameters:
        - description: Task ID
          format: uuid
          in: path
          name: task_id
          required: true
          type: string
        - description: Submission body
          in: body
          name: payload
          required: true
          schema:
            $ref: "#/definitions/types.POVSubmission"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/types.POVSubmissionResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/types.Error"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/types.Error"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/types.Error"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/types.Error"
      security:
        - BasicAuth: []
      summary: Submit Vulnerability
      tags:
        - pov
  /v1/task/{task_id}/pov/{pov_id}/:
    get:
      consumes:
        - application/json
      description: yield the status of vuln testing
      parameters:
        - description: Task ID
          format: uuid
          in: path
          name: task_id
          required: true
          type: string
        - description: POV ID
          format: uuid
          in: path
          name: pov_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/types.POVSubmissionResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/types.Error"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/types.Error"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/types.Error"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/types.Error"
      security:
        - BasicAuth: []
      summary: Vulnerability Status
      tags:
        - pov
  /v1/task/{task_id}/submitted-sarif/:
    post:
      consumes:
        - application/json
      description: Submit a CRS generated SARIF
      parameters:
        - description: Task ID
          format: uuid
          in: path
          name: task_id
          required: true
          type: string
        - description: Submission body
          in: body
          name: payload
          required: true
          schema:
            $ref: "#/definitions/types.SARIFSubmission"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/types.SARIFSubmissionResponse"
        "400":
          description: Bad Request
          schema:
            $ref: "#/definitions/types.Error"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/types.Error"
        "404":
          description: Not Found
          schema:
            $ref: "#/definitions/types.Error"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/types.Error"
      security:
        - BasicAuth: []
      summary: Submit a CRS generated SARIF
      tags:
        - submitted-sarif
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
