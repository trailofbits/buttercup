2c894c661 Update iCCP keyword to wide char array

diff --git a/pngrutil.c b/pngrutil.c
index 7c609b4b4..01e08bfe7 100644
--- a/pngrutil.c
+++ b/pngrutil.c
@@ -1419,12 +1419,13 @@ png_handle_iCCP(png_structrp png_ptr, png_inforp info_ptr, png_uint_32 length)
    if ((png_ptr->colorspace.flags & PNG_COLORSPACE_HAVE_INTENT) == 0)
    {
       uInt read_length, keyword_length;
-      char keyword[81];
+      uInt max_keyword_wbytes = 41;
+      wpng_byte keyword[max_keyword_wbytes];
 
       /* Find the keyword; the keyword plus separator and compression method
-       * bytes can be at most 81 characters long.
+       * bytes can be at most 41 wide characters long.
        */
-      read_length = 81; /* maximum */
+      read_length = sizeof(keyword); /* maximum */
       if (read_length > length)
          read_length = (uInt)length;
 
@@ -1442,12 +1443,12 @@ png_handle_iCCP(png_structrp png_ptr, png_inforp info_ptr, png_uint_32 length)
       }
 
       keyword_length = 0;
-      while (keyword_length < 80 && keyword_length < read_length &&
+      while (keyword_length < (read_length-1) && keyword_length < read_length &&
          keyword[keyword_length] != 0)
          ++keyword_length;
 
       /* TODO: make the keyword checking common */
-      if (keyword_length >= 1 && keyword_length <= 79)
+      if (keyword_length >= 1 && keyword_length <= (read_length-2))
       {
          /* We only understand '0' compression - deflate - so if we get a
           * different value we can't safely decode the chunk.
@@ -1476,13 +1477,13 @@ png_handle_iCCP(png_structrp png_ptr, png_inforp info_ptr, png_uint_32 length)
                   png_uint_32 profile_length = png_get_uint_32(profile_header);
 
                   if (png_icc_check_length(png_ptr, &png_ptr->colorspace,
-                      keyword, profile_length) != 0)
+                      (char*)keyword, profile_length) != 0)
                   {
                      /* The length is apparently ok, so we can check the 132
                       * byte header.
                       */
                      if (png_icc_check_header(png_ptr, &png_ptr->colorspace,
-                         keyword, profile_length, profile_header,
+                         (char*)keyword, profile_length, profile_header,
                          png_ptr->color_type) != 0)
                      {
                         /* Now read the tag table; a variable size buffer is
@@ -1512,7 +1513,7 @@ png_handle_iCCP(png_structrp png_ptr, png_inforp info_ptr, png_uint_32 length)
                            if (size == 0)
                            {
                               if (png_icc_check_tag_table(png_ptr,
-                                  &png_ptr->colorspace, keyword, profile_length,
+                                  &png_ptr->colorspace, (char*)keyword, profile_length,
                                   profile) != 0)
                               {
                                  /* The profile has been validated for basic
