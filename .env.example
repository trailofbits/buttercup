# Buttercup CRS - Environment Configuration Example
# Copy this file to .env and fill in your API keys

# === REQUIRED: LLM API Keys ===
# You need at least one LLM provider configured

# Option 1: OpenAI (Recommended for local development)
OPENAI_API_KEY="sk-..."

# Option 2: Anthropic Claude
# ANTHROPIC_API_KEY="sk-ant-..."

# === OPTIONAL: Additional Configuration ===

# === Cloud Services (disabled by default for offline mode) ===

# GitHub Container Registry (optional - only if using cloud images)
# 1. Create a Personal Access Token with package:read permissions
# 2. Generate auth: echo "YOUR_GITHUB_USERNAME:YOUR_PAT" | base64
# GHCR_AUTH="..."

# Docker Hub (optional - only if hitting rate limits)
# DOCKER_USERNAME="your-username"
# DOCKER_PAT="your-personal-access-token"

# LangFuse telemetry (optional - leave commented out for offline mode)
# LANGFUSE_HOST="https://your-langfuse-instance.com"
# LANGFUSE_PUBLIC_KEY="pk-..."
# LANGFUSE_SECRET_KEY="sk-..."

# OpenTelemetry (optional - leave commented out for offline mode)
# OTEL_EXPORTER_OTLP_ENDPOINT="https://your-otel-endpoint.com"
# OTEL_EXPORTER_OTLP_HEADERS="Authorization=Bearer your-token"
# OTEL_EXPORTER_OTLP_PROTOCOL=grpc

# === INSTRUCTIONS ===
# 1. Copy this file: cp .env.example .env
# 2. Add your OpenAI API key (required)
# 3. Optionally add other API keys
# 4. Run: source scripts/local/start.sh
#
# For more options, see env.local or deployment/env.template