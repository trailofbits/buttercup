[project]
name = "patcher"
version = "0.1.0"
description = "LLM-powered automated patch generation for vulnerabilities"
readme = "README.md"
authors = [{ name = "Trail of Bits", email = "opensource@trailofbits.com" }]
license = "AGPL-3.0"
requires-python = ">=3.12,<3.13"
keywords = ["patching", "vulnerability-repair", "llm", "ai", "code-generation", "automated-repair", "cybersecurity"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Operating System :: POSIX :: Linux",
]
dependencies = [
    "common",
    "langchain ~= 0.3.20",
    "langchain-community ~= 0.3.16",
    "langgraph ~= 0.5.2",
    "langgraph-checkpoint ~= 2.1.0",
    "openai ~= 1.60.2",
    "program-model",
    "pydantic-settings ~= 2.7.1",
    "python-dotenv ~= 1.0.1",
    "unidiff ~= 0.7.5",
]

[project.urls]
Repository = "https://github.com/trailofbits/buttercup"
Issues = "https://github.com/trailofbits/buttercup/issues"
Documentation = "https://github.com/trailofbits/buttercup#readme"

[project.scripts]
buttercup-patcher = "buttercup.patcher.__cli__:main"

[dependency-groups]
dev = [
    "flake8 ~= 7.1.1",
    "mypy ~= 1.15.0",
    "pytest ~= 8.3.4",
    "pytest-asyncio ~= 0.25.2",
    "pytest-cov ~= 6.0.0",
    "pytest-xdist ~= 3.6.1",
    "ruff ~= 0.12.8",
    "types-python-dateutil ~= 2.9.0.20241206",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/buttercup"]

[tool.coverage.run]
source = ["src/buttercup"]
omit = ["*/tests/*", "*/__cli__.py", "*/_cli.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
select = ["E", "F", "I", "W", "UP"]
ignore = ["COM812", "ISC001"]  # Formatter conflicts

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101", "D"]  # Allow asserts, no docstrings in tests
"*/__cli__.py" = ["T201"]  # Allow print in CLI modules

[tool.uv.sources]
common = { path = "../common", editable = true }
program-model = { path = "../program-model", editable = true }

[tool.mypy]
plugins = ['pydantic.mypy']
mypy_path = "src"
packages = "buttercup"
allow_redefinition = true
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
sqlite_cache = true
strict_equality = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true
exclude = []
