services:
  redis:
    image: redis:7.4.2
    restart: always
    ports:
      - '6379:6379'
    command: redis-server /mount/redis.conf
    volumes: 
      - cache:/data
      - ./redis:/mount
  build-bot:
    image: fuzzer-runnner-image
    build:
      context: ./
      dockerfile: ./fuzzer/dockerfiles/runner_image.Dockerfile
    depends_on:
      redis:
        condition: service_healthy
  orchestrator:
    build:
      context: ./orchestrator
    ports:
      - "127.0.0.1:8000:8000"

  litellm:
    image: ghcr.io/berriai/litellm:litellm_stable_release_branch-v1.57.8-stable
    configs:
      - source: litellm_config
        target: /app/config.yaml
    env_file: .env
    ports:
      - "127.0.0.1:8080:8080"
    environment:
        DATABASE_URL: "postgresql://litellm_user:litellm_password11@litellm-db:5432/litellm"

    command: ["--config", "/app/config.yaml", "--port", "8080"]
    depends_on:
      litellm-db:
        condition: service_healthy

  litellm-db:
    image: postgres:17.2
    restart: always
    environment:
      POSTGRES_DB: litellm
      POSTGRES_USER: litellm_user
      POSTGRES_PASSWORD: litellm_password11
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10

configs:
  litellm_config:
    file: ./litellm/litellm_config.yaml

volumes:
  cache:
    driver: local