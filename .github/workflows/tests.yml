name: Unit tests

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    strategy:
      matrix:
        component:
          [common, orchestrator, fuzzer, program-model, seed-gen, patcher]
        python:
          - "3.12"
        # TODO: Add integration tests back in
        # include:
        #   - component: common
        #     pytest_args: "--runintegration"
        #   - component: program-model
        #     pytest_args: "--runintegration"

    runs-on: ubuntu-latest
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          submodules: true

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Setup uv cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            ~/.local/share/uv
          key: ${{ runner.os }}-uv-${{ matrix.component }}-${{ hashFiles(format('{0}/uv.lock', matrix.component)) }}
          restore-keys: |
            ${{ runner.os }}-uv-${{ matrix.component }}-
            ${{ runner.os }}-uv-

      - name: Download Wasm runtime
        run: wget https://github.com/vmware-labs/webassembly-language-runtimes/releases/download/python%2F3.12.0%2B20231211-040d5a6/python-3.12.0.wasm
        if: matrix.component == 'seed-gen'
        working-directory: seed-gen

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y codequery ripgrep git-lfs
          make install-cscope

      - name: Prepare environment
        run: |
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update
          sudo mkdir -p /crs_scratch
          sudo chmod -R 777 /crs_scratch

      - name: Setup ${{ matrix.component }} component
        run: |
          uv sync --all-extras --frozen
        working-directory: ${{ matrix.component }}

      - name: Run tests on ${{ matrix.component }} component
        run: uv run --frozen pytest -svv ${{ matrix.pytest_args }}
        env:
          PYTHON_WASM_BUILD_PATH: "python-3.12.0.wasm"
        working-directory: ${{ matrix.component }}
