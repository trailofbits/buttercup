{{- if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-fuzzer-bot
  labels:
    app: fuzzer-bot
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: fuzzer-bot
  template:
    metadata:
      labels:
        app: fuzzer-bot
    spec:
      {{- include "buttercup.imagePullSecrets" . | nindent 6 }}
      initContainers:
      {{- include "buttercup.waitForRedis" . | nindent 6 }}
      containers:
      - name: fuzzer-bot
        image: "{{ .Values.global.fuzzerImage.repository }}:{{ .Values.global.fuzzerImage.tag }}"
        imagePullPolicy: {{ .Values.global.fuzzerImage.pullPolicy }}
        command: ["buttercup-fuzzer", "--crs_scratch_dir", "{{ include "buttercup.nodeLocalCrsScratchPath" . }}", "--redis_url", "{{ include "buttercup.core.redisUrl" . }}", "--timer", "{{ .Values.timer }}", "--timeout", "{{ .Values.timeout }}", "--crash_dir_count_limit", "{{ include "buttercup.core.crashDirCountLimit" . }}"]
        livenessProbe:
          exec:
            command: {{- include "buttercup.healthCheck" (dict "maxStaleTime" .Values.healthCheck.maxStaleTime) | nindent 14 }}
          initialDelaySeconds: {{ .Values.healthCheck.initialDelaySeconds | default 60 }}
          periodSeconds: {{ .Values.healthCheck.periodSeconds | default 300 }}
          timeoutSeconds: {{ .Values.healthCheck.timeoutSeconds | default 10 }}
          failureThreshold: {{ .Values.healthCheck.failureThreshold | default 2 }}
        env: 
        {{- include "buttercup.commonEnv" . | nindent 8 }}
        {{- include "buttercup.env.nodeData" . | nindent 8 }}
        {{- include "buttercup.fuzzerBotEnv" . | nindent 8 }}
        {{- include "buttercup.env.telemetry" . | nindent 8 }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        volumeMounts:
        {{- include "buttercup.standardVolumeMounts" (dict "usesTasksStorage" false) | nindent 8 }}
        {{- include "buttercup.nodeLocalVolumeMount" . | nindent 8 }}
      {{- if .Values.fuzzerRunner.enabled }}
      - name: fuzzer-runner
        image: "{{ .Values.global.fuzzerRunnerImage.repository }}:{{ .Values.global.fuzzerRunnerImage.tag }}"
        imagePullPolicy: {{ .Values.global.fuzzerRunnerImage.pullPolicy }}
        command: ["buttercup-fuzzer-server"]
        ports:
        - containerPort: {{ .Values.fuzzerRunner.port }}
          name: runner-http
        env:
        {{- include "buttercup.commonEnv" . | nindent 8 }}
        {{- include "buttercup.env.nodeData" . | nindent 8 }}
        {{- include "buttercup.env.telemetry" . | nindent 8 }}
        - name: BUTTERCUP_FUZZER_RUNNER_HOST
          value: "0.0.0.0"
        - name: BUTTERCUP_FUZZER_RUNNER_PORT
          value: "{{ .Values.fuzzerRunner.port }}"
        resources:
          {{- toYaml .Values.fuzzerRunner.resources | nindent 10 }}
        volumeMounts:
        {{- include "buttercup.standardVolumeMounts" (dict "usesTasksStorage" false) | nindent 8 }}
        {{- include "buttercup.nodeLocalVolumeMount" . | nindent 8 }}
      {{- end }}
      volumes:
      {{- include "buttercup.volumes.scratch" . | nindent 6 }}
      {{- include "buttercup.nodeLocalVolume" . | nindent 6 }}
{{- end }} 
