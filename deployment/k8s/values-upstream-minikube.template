global:
  environment: "minikube"
  orchestratorImage:
    repository: localhost/orchestrator
    tag: "latest"
    pullPolicy: Never
  fuzzerImage:
    repository: localhost/fuzzer
    tag: "latest"
    pullPolicy: Never
  seedGenImage:
    repository: localhost/seed-gen
    tag: "latest"
    pullPolicy: Never
  patcherImage:
    repository: localhost/patcher
    tag: "latest"
    pullPolicy: Never
  programModelImage:
    repository: localhost/program-model
    tag: "latest"
    pullPolicy: Never

  langfuse:
    enabled: ${LANGFUSE_ENABLED}
    deployed: ${DEPLOY_LANGFUSE}
    host: "${LANGFUSE_HOST}"
    publicKey: "${LANGFUSE_PUBLIC_KEY}"
    secretKey: "${LANGFUSE_SECRET_KEY}"

  signoz:
    deployed: ${DEPLOY_SIGNOZ}

  crs:
    api_key_id: ${CRS_KEY_ID}
    api_key_token: ${CRS_KEY_TOKEN}
    api_key_token_hash: "${CRS_KEY_TOKEN_HASH}"
    api_url: "${CRS_URL}"
    hostname: "${CRS_API_HOSTNAME}"
    competition_api_key_id: ${COMPETITION_API_KEY_ID}
    competition_api_key_token: ${COMPETITION_API_KEY_TOKEN}
    competition_api_url: "ui"

  otel:
    endpoint: "${OTEL_ENDPOINT}"
    token: "${OTEL_TOKEN}"
    protocol: "${OTEL_PROTOCOL}"

redis:
  master:
    persistence:
      enabled: false

build-bot:
  replicaCount: 1

litellm:
  masterKey: "${LITELLM_MASTER_KEY}"
  maxBudget: "${LITELLM_MAX_BUDGET}"
  azure:
    apiBase: "${AZURE_API_BASE}"
    apiKey: "${AZURE_API_KEY}"
  openai:
    apiKey: "${OPENAI_API_KEY}"
  anthropic:
    apiKey: "${ANTHROPIC_API_KEY}"

ui:
  enabled: true

competition-api:
  enabled: false

image-preloader:
  baseImages:
    - gcr.io/oss-fuzz/base-runner
    - gcr.io/oss-fuzz/base-builder
    - gcr.io/oss-fuzz/base-image
    - gcr.io/oss-fuzz/base-clang
    - gcr.io/oss-fuzz/base-runner-debug
    - gcr.io/oss-fuzz-base/base-builder-jvm
    - gcr.io/oss-fuzz-base/base-builder-ruby
    - gcr.io/oss-fuzz-base/base-builder-go
    - gcr.io/oss-fuzz-base/base-builder-python
    - gcr.io/oss-fuzz-base/base-builder-rust
  versions:
    - latest

signoz:
  enabled: ${DEPLOY_SIGNOZ}

langfuse:
  enabled: ${DEPLOY_LANGFUSE}
  # Minimum configuration for local deployment
  langfuse:
    salt:
      value: "secureSalt"
    nextauth:
      secret:
        value: "langfuse-nextauth-secret-change-in-production"
  
  postgresql:
    auth:
      username: langfuse
      password: "langfuse_dev_password"
  
  clickhouse:
    auth:
      password: "clickhouse_dev_password"
  
  redis:
    auth:
      password: "redis_dev_password"
  
  s3:
    auth:
      rootPassword: "minio_dev_password"
